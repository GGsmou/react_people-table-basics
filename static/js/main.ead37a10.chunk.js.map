{"version":3,"sources":["components/Nav.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/Person.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","Router.tsx","index.tsx"],"names":["classes","isActive","classNames","Nav","className","role","to","App","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","Person","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","React","useState","setPeople","errorMsg","setErrorMsg","isLoading","setIsLoading","useEffect","catch","finally","preparedPeople","useMemo","find","p","length","Router","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ead37a10.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst classes = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  })\n);\n\nexport const Nav: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={classes} to=\"/\">Home</NavLink>\n          <NavLink className={classes} to=\"/people\">People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Nav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person as PersonType } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: PersonType;\n};\n\nexport const Person: React.FC<Props> = ({\n  person,\n}) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === person.slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <PersonLink person={person.mother} />\n        ) : (\n          <p>{person.motherName ? person.motherName : '-'}</p>\n        )}\n      </td>\n      <td>\n        {person.father ? (\n          <PersonLink person={person.father} />\n        ) : (\n          <p>{person.fatherName ? person.fatherName : '-'}</p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person as PersonType } from '../types';\nimport { Person } from './Person';\n\ntype Props = {\n  people: PersonType[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <Person key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = React.useState<Person[]>([]);\n  const [errorMsg, setErrorMsg] = React.useState<string>('');\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMsg('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => people.map((person) => ({\n    ...person,\n    mother: people.find((p) => p.name === (person.motherName || '-')),\n    father: people.find((p) => p.name === (person.fatherName || '-')),\n  })), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && errorMsg && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMsg}\n            </p>\n          )}\n\n          {!isLoading && !errorMsg && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !errorMsg && people.length > 0 && (\n            <PeopleTable people={preparedPeople} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Navigate, Route, HashRouter as RouterComp, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Router: React.FC = () => {\n  return (\n    <RouterComp>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </RouterComp>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Router } from './Router';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router />,\n  );\n"],"sourceRoot":""}